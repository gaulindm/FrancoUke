# Generated by Django 5.2.2 on 2025-08-21 20:24


import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BoardColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.PositiveIntegerField(default=0)),
                ('is_public', models.BooleanField(default=False)),
                ('column_type', models.CharField(choices=[('general', 'General'), ('photos', 'Photo Gallery'), ('venue', 'Venue'), ('songs_to_listen', 'Songs To Listen')], default='general', max_length=20)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='BoardItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('youtube_url', models.URLField(blank=True, null=True)),
                ('media_file', models.FileField(blank=True, null=True, upload_to='board_media/')),
                ('link', models.URLField(blank=True, null=True)),
                ('rich_description', models.TextField(blank=True, null=True)),
                ('position', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='board.boardcolumn')),
            ],
        ),
        migrations.CreateModel(
            name='BoardItemPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='board_photos/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_cover', models.BooleanField(default=False)),
                ('board_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='board.boarditem')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('event_type', models.CharField(choices=[('rehearsal', 'Rehearsal'), ('performance', 'Performance'), ('general', 'General Event')], default='performance', max_length=20)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('tbc', 'To Be Confirmed'), ('past', 'Past')], default='upcoming', max_length=20)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('board_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='board.boarditem')),
            ],
            options={
                'ordering': ['event_date', 'start_time', 'title'],
            },
        ),
        migrations.CreateModel(
            name='EventPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='event_photos/')),
                ('is_cover', models.BooleanField(default=False)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='board.event')),
            ],
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('arrive_by', models.TimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('attire', models.CharField(blank=True, max_length=255, null=True)),
                ('chairs', models.CharField(blank=True, max_length=255, null=True)),
                ('performance_type', models.CharField(choices=[('upcoming', 'Upcoming'), ('tbc', 'To Be Confirmed'), ('past', 'Past Performance')], default='upcoming', max_length=20)),
                ('is_rehearsal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('board_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='board.boarditem')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attire', models.CharField(blank=True, max_length=255, null=True)),
                ('chairs', models.CharField(blank=True, max_length=255, null=True)),
                ('arrive_by', models.TimeField(blank=True, null=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='performance_details', to='board.event')),
            ],
        ),
        migrations.CreateModel(
            name='RehearsalDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rehearsal_details', to='board.event')),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('yes', 'Yes'), ('no', 'No'), ('maybe', 'Maybe')], default='maybe', max_length=10)),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='board.performance')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_availabilities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('performance', 'user')},
            },
        ),
    ]
